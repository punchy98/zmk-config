/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/num_word.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        tddash: tddash {
            compatible = "zmk,behavior-tap-dance";
            label = "TDDASH";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp MINUS>;
        };

        tdunder: tdunder {
            compatible = "zmk,behavior-tap-dance";
            label = "TDUNDER";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp UNDERSCORE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <21 22>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <23 22>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <21 23>;
        };

        MiddleClickPaste {
            bindings = <&mkp MCLK>;
            key-positions = <21 22 23>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 17>;
        };

        Lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <20 21>;
        };

        Rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <29 28>;
        };

        btclear {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <29 0>;
        };

        escape-combo {
            bindings = <&kp ESCAPE>;
            key-positions = <13 12>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <26 27>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <27 28>;
        };

        mouselayer {
            bindings = <&tog 4>;
            key-positions = <1 3>;
        };

        systemlayer {
            bindings = <&mo 5>;
            key-positions = <0 9>;
        };

        baselayer {
            bindings = <&to 0>;
            key-positions = <14 13>;
        };
    };

    macros {
        BRACES: PGREP {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "PGREP";
        };

        URL: URL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp PERIOD &kp RIGHT_BRACKET>;
            label = "URL";
        };

        PREV: PREV {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DLLR &kp UNDER>;
            label = "PREV";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Home";
            bindings = <
  &kp Q           &kp W           &kp E             &kp R        &kp T          &kp Y            &kp U                 &kp I                    &kp O            &kp P
  &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LCTRL F  &kp G          &kp H            &hm RCTRL J           &hm RIGHT_SHIFT K        &hm RIGHT_ALT L  &hm RIGHT_GUI SEMICOLON
  &kp Z           &kp X           &kp C             &kp V        &kp B          &kp N            &kp M                 &kp COMMA                &kp DOT          &kp SLASH
                                  &lt 2 TAB         &lt 3 SPACE  &num_word 1    &lt 2 BACKSPACE  &mt LEFT_SHIFT ENTER  &hold_tap LG(LS(S)) SQT
            >;
        };

        number_layer {
            label = "Number";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7     &kp N8      &kp N9  &kp BACKSPACE
  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4     &kp N5      &kp N6  &kp N0
  &trans  &trans  &trans  &trans  &trans    &trans  &kp N1     &kp N2      &kp N3  &trans
                  &trans  &trans  &trans    &trans  &kp ENTER  &kp PERIOD
            >;
        };

        symbol_layer {
            label = "Symbols";
            bindings = <
  &kp LS(AT_SIGN)  &kp LS(AMPERSAND)  &kp EQUAL      &kp PLUS          &kp LS(PERCENT)    &kp CARET   &kp LS(UNDERSCORE)  &BRACES           &kp LS(LEFT_PARENTHESIS)  &kp LS(RIGHT_PARENTHESIS)
  &kp EXCL         &kp TILDE          &kp LESS_THAN  &kp GREATER_THAN  &kp HASH           &kp DOLLAR  &kp ASTERISK        &PREV             &kp SLASH                 &URL
  &none            &none              &none          &kp GRAVE         &none              &kp PIPE    &kp MINUS           &kp LEFT_BRACKET  &kp RIGHT_BRACKET         &kp BACKSLASH
                                      &none          &none             &none              &none       &none               &none
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
  &kp LG(Q)           &kp LG(W)           &kp LG(E)             &kp LG(R)        &kp LG(T)    &kp HOME        &kp PAGE_DOWN   &kp PG_UP     &kp END     &none
  &mt LEFT_GUI LG(A)  &mt LEFT_ALT LG(S)  &mt LEFT_SHIFT LG(D)  &mt LCTRL LG(F)  &kp LG(G)    &kp LEFT_ARROW  &kp DOWN        &kp UP        &kp RIGHT   &none
  &kp LG(Z)           &kp LG(X)           &kp LG(C)             &kp LG(V)        &kp LG(B)    &kp DELETE      &msc SCRL_DOWN  &msc SCRL_UP  &kp INSERT  &none
                                          &none                 &none            &none        &none           &none           &none
            >;
        };

        mouse_layer {
            bindings = <
  &trans  &trans  &trans     &trans     &trans    &trans          &kp PG_UP       &mmv MOVE_UP    &kp PAGE_DOWN    &trans
  &trans  &trans  &trans     &trans     &trans    &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT
  &trans  &trans  &trans     &trans     &trans    &trans          &mkp LCLK       &mkp MCLK       &mkp RCLK        &trans
                  &mkp LCLK  &mkp RCLK  &tog 4    &trans          &trans          &trans
            >;

            label = "Mouse";
        };

        system_layer {
            bindings = <
  &trans        &trans          &trans             &trans           &bootloader    &bootloader  &trans  &trans  &trans  &trans
  &trans        &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_NEXT       &trans         &trans       &trans  &trans  &trans  &trans
  &bt BT_SEL 2  &bt BT_SEL 1    &bt BT_SEL 0       &bt BT_PRV       &bt BT_NXT     &trans       &trans  &trans  &trans  &trans
                                &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans         &trans       &trans  &trans
            >;

            label = "System";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
